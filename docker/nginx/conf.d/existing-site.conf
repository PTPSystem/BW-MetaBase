# HTTP to HTTPS redirect for existing domain
server {
    listen 80;
    server_name str.ptpsystem.com;
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS configuration for existing domain
server {
    listen 443 ssl http2;
    server_name str.ptpsystem.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/str.ptpsystem.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/str.ptpsystem.com/privkey.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Root directory (customize based on your existing application)
    root /var/www/str.ptpsystem.com;
    index index.html index.htm index.php;
    
    # Basic location block - customize based on your existing app
    location / {
        try_files $uri $uri/ =404;
        
        # If you have an existing application container, proxy to it:
        # proxy_pass http://your-existing-app:port;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # PHP support (if needed for existing app)
    location ~ \.php$ {
        fastcgi_pass php-fpm:9000;  # Adjust to your PHP-FPM container
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
    
    # Static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ /(config|logs|temp|vendor) {
        deny all;
    }
}
